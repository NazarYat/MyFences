<Window x:Class="MyFences.Windows.FenceWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:controls="clr-namespace:MyFences.Controls"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:util="clr-namespace:MyFences.Util" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:MyFences.ViewModels"
        Title="Fence"
        WindowStyle="None"
        ResizeMode="CanResize"
        ShowInTaskbar="False"
        Background="Transparent"
        AllowsTransparency="True"
        Loaded="FenceWindow_Loaded"
        PreviewMouseDown="Window_PreviewMouseDown"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=vm:FenceViewModel}"
        BorderBrush="{Binding Fence.WindowBorderColor, Converter={StaticResource ColorToBrushConverter}}"
        BorderThickness="{Binding Fence.BorderThickness}"
        SizeChanged="Window_SizeChanged"
        LocationChanged="Window_LocationChanged">

    <Window.Resources>
        <util:BindingProxy x:Key="Proxy" Data="{Binding}" />

        <DropShadowEffect x:Key="TextOutlineEffect"
                          Color="Black"
                          BlurRadius="3"
                          ShadowDepth="1.5"
                          Direction="270"
                          Opacity="1" />

        <Style TargetType="ScrollBar" x:Key="CustomVerticalScrollBar" BasedOn="{x:Null}">
            <Setter Property="Width" Value="5"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollBar">
                        <Grid Background="Transparent">
                            <Track Name="PART_Track" IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb Background="{Binding Data.Fence.ScrollBarColor, Converter={StaticResource ColorToBrushConverter}, Source={StaticResource Proxy}}"
                                           BorderThickness="{Binding Data.Fence.ScrollBarBorderThickness, Source={StaticResource Proxy}}"
                                           Margin="1 1 0 5">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Border Width="{Binding Data.Fence.ScrollBarWidth, Source={StaticResource Proxy}}" 
                                                        Background="{Binding Data.Fence.ScrollBarColor, Converter={StaticResource ColorToBrushConverter}, Source={StaticResource Proxy}}" 
                                                        CornerRadius="{Binding Data.Fence.ScrollBarCornerRadius, Source={StaticResource Proxy}}"
                                                        BorderBrush="{Binding Data.Fence.ScrollBarBorderColor, Converter={StaticResource ColorToBrushConverter}, Source={StaticResource Proxy}}"
                                                        BorderThickness="{Binding Data.Fence.ScrollBarBorderThickness, Source={StaticResource Proxy}}"/>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TransparentTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{Binding Data.Fence.HeaderTextColor, Converter={StaticResource ColorToBrushConverter}, Source={StaticResource Proxy}}"/>
            <Setter Property="CaretBrush" Value="{Binding Data.Fence.HeaderTextColor, Converter={StaticResource ColorToBrushConverter}, Source={StaticResource Proxy}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="#19000000" 
                                CornerRadius="4"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Background="Transparent"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Background="{Binding Fence.BackgroundColor, Converter={StaticResource ColorToBrushConverter}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="{Binding Fence.HeaderHeight}"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Background="{Binding Fence.HeaderColor, Converter={StaticResource ColorToBrushConverter}}" 
              MouseDown="TopBar_MouseLeftButtonDown">
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Settings" Click="MenuItem_Click"/>
                    <MenuItem Header="New fence" Click="MenuItem_Click2"/>
                    <MenuItem Header="Delete" Click="MenuItem_Click3"/>
                </ContextMenu>
            </Grid.ContextMenu>
            <TextBlock Text="{Binding Name, UpdateSourceTrigger=LostFocus}"
                       MaxWidth="500"
                       Grid.Column="1"
                       Foreground="{Binding Data.Fence.HeaderTextColor, Converter={StaticResource ColorToBrushConverter}, Source={StaticResource Proxy}}"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Center"
                       TextAlignment="Center"
                       MouseLeftButtonDown="NameTextBlock_MouseLeftButtonDown"
                       Visibility="{Binding NameEditing, Converter={StaticResource BooleanToVisibilityConverterInverted}}"
                       FontSize="{Binding Data.Fence.HeaderFontSize, Source={StaticResource Proxy}}" SnapsToDevicePixels="True"/>
            <TextBox x:Name="NameTextBox"
                     MaxWidth="500"
                     Margin="10 0"
                     Grid.Column="1"
                     Text="{Binding Name, UpdateSourceTrigger=LostFocus}"
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Center"
                     LostKeyboardFocus="NameTextBox_LostFocus"
                     PreviewKeyDown="TextBox_PreviewKeyDown"
                     Visibility="{Binding NameEditing, Converter={StaticResource BooleanToVisibilityConverter}}"
                     Style="{StaticResource TransparentTextBoxStyle}"
                     FontSize="{Binding Data.Fence.HeaderFontSize, Source={StaticResource Proxy}}" SnapsToDevicePixels="True"/>
        </Grid>

        <Grid Grid.Row="1">
            <ListView x:Name="FilesListView"
                      ItemsSource="{Binding Items}"
                      Background="Transparent"
                      BorderThickness="0"
                      AllowDrop="True"
                      Drop="ListView_Drop"
                      DragOver="ListView_DragOver"
                      PreviewKeyDown="ListView_PreviewKeyDown"
                      SelectionMode="Extended"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ScrollViewer.CanContentScroll="False"
                      HorizontalContentAlignment="Stretch"
                      VerticalContentAlignment="Stretch">
                <ListView.Resources>
                    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource CustomVerticalScrollBar}" />
                </ListView.Resources>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <controls:UniformSpacingWrapPanel 
                            ItemWidth="{Binding Data.Fence.ItemWidth, Source={StaticResource Proxy}}" 
                            ItemHeight="{Binding Data.Fence.ItemHeight, Source={StaticResource Proxy}}" 
                            VerticalSpacing="{Binding Data.Fence.Spacing, Source={StaticResource Proxy}}"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>

                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="Background" Value="{Binding Data.Fence.ItemColor, Converter={StaticResource ColorToBrushConverter}, Source={StaticResource Proxy}}"/>
                        <Setter Property="BorderBrush" Value="{Binding Data.Fence.ItemBorderColor, Converter={StaticResource ColorToBrushConverter}, Source={StaticResource Proxy}}"/>
                        <Setter Property="BorderThickness" Value="{Binding Data.Fence.ItemBorderThickness, Source={StaticResource Proxy}}"/>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <Border x:Name="Bd"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            SnapsToDevicePixels="true"
                                            CornerRadius="2">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{Binding Data.Fence.HighlightedItemColor, Converter={StaticResource ColorToBrushConverter}, Source={StaticResource Proxy}}"/>
                                            <Setter Property="BorderBrush" Value="{Binding Data.Fence.HighlightedItemBorderColor, Converter={StaticResource ColorToBrushConverter}, Source={StaticResource Proxy}}"/>
                                            <Setter Property="BorderThickness" Value="{Binding Data.Fence.HighlightedItemBorderThickness, Source={StaticResource Proxy}}"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{Binding Data.Fence.SelectedItemColor, Converter={StaticResource ColorToBrushConverter}, Source={StaticResource Proxy}}"/>
                                            <Setter Property="BorderBrush" Value="{Binding Data.Fence.SelectedItemBorderColor, Converter={StaticResource ColorToBrushConverter}, Source={StaticResource Proxy}}"/>
                                            <Setter Property="BorderThickness" Value="{Binding Data.Fence.SelectedItemBorderThickness, Source={StaticResource Proxy}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel HorizontalAlignment="Center"
                                    Orientation="Vertical"
                                    Width="{Binding Data.Fence.ItemWidth, Source={StaticResource Proxy}}"
                                    Height="{Binding Data.Fence.ItemHeight, Source={StaticResource Proxy}}"
                                    MouseDown="StackPanel_MouseDown"
                                    MouseRightButtonDown="StackPanel_MouseRightButtonDown">

                            <Image Source="{Binding Icon}"
                                   Width="{Binding Data.Fence.ItemIconSize, Source={StaticResource Proxy}}"
                                   Height="{Binding Data.Fence.ItemIconSize, Source={StaticResource Proxy}}"
                                   Margin="0 5 0 0"
                                   RenderOptions.BitmapScalingMode="HighQuality"/>

                            <Grid>
                                <!-- Shadow/outline layer -->
                                <!--<TextBlock Text="{Binding Name}"
                                           MaxWidth="{Binding Data.ItemSize, Source={StaticResource Proxy}}"
                                           TextWrapping="Wrap"
                                           FontSize="12"
                                           Foreground="Black"
                                           Margin="1,1,0,0" SnapsToDevicePixels="True" />
                                <TextBlock Text="{Binding Name}"
                                           MaxWidth="{Binding Data.ItemSize, Source={StaticResource Proxy}}"
                                           TextWrapping="Wrap"
                                           FontSize="12"
                                           Foreground="Black"
                                           Margin="-0.5,-0.5,0,0" SnapsToDevicePixels="True" />-->

                                <!-- Foreground white text -->
                                <TextBlock Text="{Binding Name}"
                                           Foreground="{Binding Data.Fence.ItemTextColor, Converter={StaticResource ColorToBrushConverter}, Source={StaticResource Proxy}}"
                                           MaxWidth="{Binding Data.Fence.ItemSize, Source={StaticResource Proxy}}"
                                           TextWrapping="Wrap"
                                           HorizontalAlignment="Center"
                                           TextAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontSize="{Binding Data.Fence.ItemFontSize, Source={StaticResource Proxy}}" SnapsToDevicePixels="True"/>
                            </Grid>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </Grid>
</Window>
