<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Shared brushes & sizes -->
    <Color x:Key="FancyAccentColor">#FF5AA9FF</Color>
    <Color x:Key="FancyAccentColorDark">#FF3A8DE6</Color>
    <Color x:Key="FancyAccentColorLight">#FF8FD6FF</Color>
    <SolidColorBrush x:Key="FancyBackgroundBrush" Color="#FFF8FBFF"/>
    <SolidColorBrush x:Key="FancyAccentBrush" Color="{StaticResource FancyAccentColor}"/>
    <SolidColorBrush x:Key="FancyAccentBrushDark" Color="{StaticResource FancyAccentColorDark}"/>
    <SolidColorBrush x:Key="FancyAccentBrushLight" Color="{StaticResource FancyAccentColorLight}"/>
    <SolidColorBrush x:Key="FancyDisabledBrush" Color="#FFE6E9EF"/>
    <Thickness x:Key="FancyButtonPadding">10, 5</Thickness>
    <CornerRadius x:Key="FancyCornerRadius">8</CornerRadius>

    <!-- Fancy Button Style (no animations) -->
    <Style TargetType="Button" x:Key="FancyButton">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{StaticResource FancyAccentBrush}"/>
        <Setter Property="Padding" Value="{StaticResource FancyButtonPadding}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Margin="5">
                        <!-- Main body -->
                        <Border x:Name="Body"
                                CornerRadius="{StaticResource FancyCornerRadius}"
                                Padding="{TemplateBinding Padding}">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource FancyAccentColor}" />
                            </Border.Background>

                            <!-- Inner content layout: icon + content -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- Icon holder -->
                                <ContentPresenter x:Name="IconPresenter"
                                                  Content="{TemplateBinding Tag}"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True"/>

                                <!-- Main content -->
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Grid.Column="1"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True"/>
                            </Grid>
                        </Border>

                        <!-- Subtle highlight on top -->
                        <Border CornerRadius="{StaticResource FancyCornerRadius}" IsHitTestVisible="False">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="0.12">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <!-- Disabled overlay -->
                        <Border x:Name="DisabledOverlay"
                                Background="#80FFFFFF"
                                Visibility="Collapsed"
                                CornerRadius="{StaticResource FancyCornerRadius}"
                                IsHitTestVisible="False"/>
                    </Grid>

                    <!-- Visual states (static, no animations) -->
                    <ControlTemplate.Triggers>
                        <!-- IsEnabled false -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Body" Property="Opacity" Value="0.6"/>
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value="0.7"/>
                            <Setter Property="Foreground" Value="#9A9FA6"/>
                            <Setter TargetName="DisabledOverlay" Property="Visibility" Value="Visible"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>

                        <!-- Mouse over (simple color change) -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Body" Property="Background"
                                    Value="{StaticResource FancyAccentBrushLight}"/>
                        </Trigger>

                        <!-- Pressed (slightly darker) -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Body" Property="Background"
                                    Value="{StaticResource FancyAccentBrushDark}"/>
                            <Setter TargetName="Body" Property="Opacity" Value="0.96"/>
                        </Trigger>

                        <!-- Focus visual -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Body" Property="BorderBrush"
                                    Value="{StaticResource FancyAccentBrushDark}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
